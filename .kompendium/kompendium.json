{"docs":{"timestamp":"2020-08-10T19:35:21","compiler":{"name":"@stencil/core","version":"1.17.3","typescriptVersion":"3.9.7"},"components":[{"dirPath":"C:/workspace/kompendium.dev/src/components/my-test-component/examples","filePath":"./src/components/my-test-component/examples/example.tsx","fileName":"example.tsx","readmePath":"C:/workspace/kompendium.dev/src/components/my-test-component/examples/readme.md","usagesDir":"C:/workspace/kompendium.dev/src/components/my-test-component/examples/usage","tag":"my-component-example","readme":"# my-component-example\n\n\n","usage":{},"docs":"Basic usage\n\nThis shows how to use the `my-component` component","docsTags":[],"encapsulation":"shadow","dependents":[],"dependencies":["my-test-component"],"dependencyGraph":{"my-component-example":["my-test-component"]},"props":[],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[],"sources":[{"filename":"example.tsx","type":"tsx","source":"import { Component, h } from '@stencil/core';\nimport { Name, Title } from '../my-test-component.types';\n\n/**\n * Basic usage\n *\n * This shows how to use the `my-component` component\n */\n@Component({\n    tag: 'my-component-example',\n    shadow: true,\n})\nexport class MyExample {\n\n    public render() {\n        const data: Name = {\n            first: 'Tyrion',\n            last: 'Lannister',\n            title: Title.Lord\n        };\n\n        return <my-test-component data={data} />;\n    }\n}\n"}]},{"dirPath":"C:/workspace/kompendium.dev/src/components/my-test-component/examples","filePath":"./src/components/my-test-component/examples/example2.tsx","fileName":"example2.tsx","readmePath":"C:/workspace/kompendium.dev/src/components/my-test-component/examples/readme.md","usagesDir":"C:/workspace/kompendium.dev/src/components/my-test-component/examples/usage","tag":"my-component-example2","readme":"# my-component-example\n\n\n","usage":{},"docs":"Advanced usage\n\nYou can also give the component a background color and listen for events!","docsTags":[{"text":"nickname.ts","name":"link"}],"encapsulation":"shadow","dependents":[],"dependencies":["my-test-component"],"dependencyGraph":{"my-component-example2":["my-test-component"]},"props":[],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[],"sources":[{"filename":"example2.tsx","type":"tsx","source":"import { Component, h } from '@stencil/core';\nimport { Name, Title, MyError } from '../my-test-component.types';\nimport nickname from './nickname';\n\n/**\n * Advanced usage\n *\n * You can also give the component a background color and listen for events!\n * @link nickname.ts\n */\n@Component({\n    tag: 'my-component-example2',\n    styleUrl: 'example.css',\n    shadow: true,\n})\nexport class MyExample2 {\n\n    public render() {\n        const data: Name = {\n            first: 'Tyrion',\n            last: 'Lannister',\n            middle: nickname,\n            title: Title.Lord\n        };\n\n        return <my-test-component data={data} onCrash={this.onCrash} />;\n    }\n\n    private onCrash(error: CustomEvent<MyError>) {\n        console.log(error);\n    }\n}\n"},{"filename":"example.css","type":"scss","source":"my-test-component {\n    --custom-color: pink;\n}\n"},{"filename":"nickname.ts","type":"ts","source":"export default 'the Halfman';\n"}]},{"dirPath":"C:/workspace/kompendium.dev/src/components/my-test-component","filePath":"./src/components/my-test-component/my-test-component.tsx","fileName":"my-test-component.tsx","readmePath":"C:/workspace/kompendium.dev/src/components/my-test-component/readme.md","usagesDir":"C:/workspace/kompendium.dev/src/components/my-test-component/usage","tag":"my-test-component","readme":"# my-component\n\n\n","usage":{},"docs":"This is some sample documentation for the `my-component` component\n\nYou can use any type of markdown to document your components, e.g.\n\n- Lists\n   - Nested lists\n\nText formatting like *italic* and **bold**\n\n#### Headings\n\n> Blockquotes\n\n```\n// Code blocks\n```\n\n:::note\nNotes\n:::\n\n:::warning\nWarnings\n:::","docsTags":[{"text":"You can also add tags like this!","name":"todo"},{"text":"Maybe this component is deprecated?","name":"deprecated"},{"text":"my-component-example","name":"exampleComponent"},{"text":"my-component-example2","name":"exampleComponent"}],"encapsulation":"shadow","dependents":["my-component-example","my-component-example2"],"dependencies":[],"dependencyGraph":{"my-component-example":["my-test-component"],"my-component-example2":["my-test-component"]},"deprecation":"Maybe this component is deprecated?","props":[{"name":"data","type":"Name","mutable":false,"reflectToAttr":false,"docs":"The name data","docsTags":[{"text":"Write better documentation!","name":"todo"}],"values":[{"type":"Name"}],"optional":false,"required":false}],"methods":[{"name":"setData","returns":{"type":"Promise<void>","docs":""},"signature":"setData(data: Name) => Promise<void>","parameters":[],"docs":"Set the data of the component","docsTags":[{"name":"param","text":"data the data to set"},{"name":"deprecated","text":"This should not be used!"}],"deprecation":"This should not be used!"}],"events":[{"event":"crash","detail":"MyError","bubbles":true,"cancelable":true,"composed":true,"docs":"This is emitted when the component might crash!","docsTags":[]}],"styles":[{"name":"--custom-color","annotation":"prop","docs":"Background color of the text"}],"slots":[],"parts":[],"listeners":[],"sources":[{"filename":"my-test-component.tsx","type":"tsx","source":"import { Component, Prop, h, EventEmitter, Event, Method } from '@stencil/core';\nimport { format } from '../../utils/utils';\nimport { Name, MyError } from './my-test-component.types';\n\n/**\n * This is some sample documentation for the `my-component` component\n *\n * You can use any type of markdown to document your components, e.g.\n *\n * - Lists\n *   - Nested lists\n *\n * Text formatting like *italic* and **bold**\n *\n * #### Headings\n *\n * > Blockquotes\n *\n * ```\n * // Code blocks\n * ```\n *\n * :::note\n * Notes\n * :::\n *\n * :::warning\n * Warnings\n * :::\n *\n * @todo You can also add tags like this!\n * @deprecated Maybe this component is deprecated?\n * @exampleComponent my-component-example\n * @exampleComponent my-component-example2\n */\n@Component({\n    tag: 'my-test-component',\n    styleUrl: 'my-test-component.css',\n    shadow: true,\n})\nexport class MyTestComponent {\n    /**\n     * The name data\n     * @todo Write better documentation!\n     */\n    @Prop()\n    public data: Name;\n\n    /**\n     * This is emitted when the component might crash!\n     */\n    @Event()\n    public crash: EventEmitter<MyError>;\n\n    private getText(): string {\n        return format(this.data);\n    }\n\n    /**\n     * Set the data of the component\n     *\n     * @param {Name} data the data to set\n     *\n     * @deprecated This should not be used!\n     */\n    @Method()\n    public async setData(data: Name) {\n        this.data = data;\n    }\n\n    public render() {\n        if (this.data.middle) {\n            this.crash.emit();\n        }\n\n        return <p>Hello, World! I'm {this.getText()}</p>;\n    }\n}\n"},{"filename":"my-test-component.css","type":"scss","source":":host {\n  display: block;\n}\n\n/**\n * @prop --custom-color: Background color of the text\n */\np {\n    background-color: var(--custom-color, white);\n    padding: 1rem;\n}\n"}]}]},"title":"kompendium dev","menu":[{"path":"/component","title":"Components","children":[{"path":"/component/my-test-component","title":"Test component","children":[{"title":"Properties","path":"/component/my-test-component/properties"},{"title":"Events","path":"/component/my-test-component/events"},{"title":"Methods","path":"/component/my-test-component/methods"},{"title":"Styles","path":"/component/my-test-component/styles"}]}]},{"path":"/type","title":"Types","children":[{"path":"/type/Title","title":"Title","children":[]},{"path":"/type/MyError","title":"MyError","children":[]},{"path":"/type/Name","title":"Name","children":[]}]}],"readme":"![Built With Stencil](https://img.shields.io/badge/-Built%20With%20Stencil-16161d.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE5LjIuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTEyIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTEyOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI%2BCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI%2BCgkuc3Qwe2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU%2BCjxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik00MjQuNywzNzMuOWMwLDM3LjYtNTUuMSw2OC42LTkyLjcsNjguNkgxODAuNGMtMzcuOSwwLTkyLjctMzAuNy05Mi43LTY4LjZ2LTMuNmgzMzYuOVYzNzMuOXoiLz4KPHBhdGggY2xhc3M9InN0MCIgZD0iTTQyNC43LDI5Mi4xSDE4MC40Yy0zNy42LDAtOTIuNy0zMS05Mi43LTY4LjZ2LTMuNkgzMzJjMzcuNiwwLDkyLjcsMzEsOTIuNyw2OC42VjI5Mi4xeiIvPgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNNDI0LjcsMTQxLjdIODcuN3YtMy42YzAtMzcuNiw1NC44LTY4LjYsOTIuNy02OC42SDMzMmMzNy45LDAsOTIuNywzMC43LDkyLjcsNjguNlYxNDEuN3oiLz4KPC9zdmc%2BCg%3D%3D&colorA=16161d&style=flat-square)\n\n# Stencil Component Starter\n\nThis is a starter project for building a standalone Web Component using Stencil.\n\nStencil is also great for building entire apps. For that, use the [stencil-app-starter](https://github.com/ionic-team/stencil-app-starter) instead.\n\n# Stencil\n\nStencil is a compiler for building fast web apps using Web Components.\n\nStencil combines the best concepts of the most popular frontend frameworks into a compile-time rather than run-time tool.  Stencil takes TypeScript, JSX, a tiny virtual DOM layer, efficient one-way data binding, an asynchronous rendering pipeline (similar to React Fiber), and lazy-loading out of the box, and generates 100% standards-based Web Components that run in any browser supporting the Custom Elements v1 spec.\n\nStencil components are just Web Components, so they work in any major framework or with no framework at all.\n\n## Getting Started\n\nTo start building a new web component using Stencil, clone this repo to a new directory:\n\n```\ngit clone https://github.com/ionic-team/stencil-component-starter.git my-component\ncd my-component\ngit remote rm origin\n```\n\nand run:\n\n```\nnpm install\nnpm start\n```\n\nTo build the component for production, run:\n\n```\nnpm run build\n```\n\nTo run the unit tests for the components, run:\n\n```\nnpm test\n```\n\nNeed help? Check out our docs [here](https://stenciljs.com/docs/my-first-component).\n\n\n## Naming Components\n\nWhen creating new component tags, we recommend _not_ using `stencil` in the component name (ex: `<stencil-datepicker>`). This is because the generated component has little to nothing to do with Stencil; it's just a web component!\n\nInstead, use a prefix that fits your company or any name for a group of related components. For example, all of the Ionic generated web components use the prefix `ion`.\n\n\n## Using this component\n\nThere are three strategies we recommend for using web components built with Stencil.\n\nThe first step for all three of these strategies is to [publish to NPM](https://docs.npmjs.com/getting-started/publishing-npm-packages).\n\n### Script tag\n\n- Put a script tag similar to this `<script src='https://unpkg.com/my-component@0.0.1/dist/mycomponent.js'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### Node Modules\n- Run `npm install my-component --save`\n- Put a script tag similar to this `<script src='node_modules/my-component/dist/mycomponent.js'></script>` in the head of your index.html\n- Then you can use the element anywhere in your template, JSX, html etc\n\n### In a stencil-starter app\n- Run `npm install my-component --save`\n- Add an import to the npm packages `import my-component;`\n- Then you can use the element anywhere in your template, JSX, html etc\n","guides":[],"types":[{"type":"enum","name":"Title","docs":"What kind of person are you?","docsTags":[],"members":[{"name":"Dr","docs":"For the holder of a doctoral degree and for medical practitioners,\ndentists and veterinary surgeons","docsTags":[],"value":"\"Dr\""},{"name":"Lady","docs":"For female peers with the rank of baroness, viscountess, countess, and\nmarchioness, or the wives of men who hold the equivalent titles","docsTags":[],"value":"\"Lady\""},{"name":"Lord","docs":"For male barons, viscounts, earls, and marquesses, as well as some of\ntheir children","docsTags":[],"value":"\"Lord\""},{"name":"Miss","docs":"For girls, unmarried women and (in the UK) married women who continue to\nuse their maiden name","docsTags":[],"value":"\"Miss\""},{"name":"Mr","docs":"For men, regardless of marital status, who do not have another\nprofessional or academic title","docsTags":[],"value":"\"Mr\""},{"name":"Mrs","docs":"For married women who do not have another professional or academic title","docsTags":[],"value":"\"Mrs\""}]},{"type":"interface","name":"MyError","typeParams":[],"docs":"This is an error","docsTags":[],"props":[{"name":"message","type":"string","docs":"What happened?","docsTags":[],"optional":true}],"methods":[]},{"type":"interface","name":"Name","typeParams":[],"docs":"","docsTags":[],"props":[{"name":"first","type":"string","docs":"The first name","docsTags":[],"optional":false},{"name":"last","type":"string","docs":"The last name","docsTags":[],"optional":false},{"name":"middle","type":"string","docs":"The middle name","docsTags":[{"name":"deprecated","text":"This is no longer used"}],"optional":true},{"name":"title","type":"Title","docs":"The title","docsTags":[],"optional":true}],"methods":[]}]}